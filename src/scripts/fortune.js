import translations from '../locales/translations.js';document.addEventListener('DOMContentLoaded', () => {    const fortuneButton = document.getElementById('fortuneButton');    const fortuneText = document.getElementById('fortuneText');    const languageBtn = document.getElementById('languageBtn');    const languageDropdown = document.getElementById('languageDropdown');    const currentLangFlag = document.getElementById('currentLangFlag');    if (!fortuneButton || !fortuneText) {        console.error('Required elements not found');        return;    }    function getRandomFortune() {        const currentLang = localStorage.getItem('language') || 'ru';        const lastFortuneTime = localStorage.getItem('lastFortuneTime');        const currentTime = Date.now();        if (lastFortuneTime) {            const timeElapsed = currentTime - parseInt(lastFortuneTime);            const hoursLeft = 24 - Math.floor(timeElapsed / (1000 * 60 * 60));            const minutesLeft = 60 - Math.floor((timeElapsed % (1000 * 60 * 60)) / (1000 * 60));            if (timeElapsed < 24 * 60 * 60 * 1000) {                const waitMessage = window.languageManager.translations[currentLang].luck.waitMessage                    .replace('{hours}', hoursLeft)                    .replace('{minutes}', minutesLeft);                Notifications.show(waitMessage, 'warning');                return null;            }        }        if (!window.languageManager || !window.languageManager.translations) {            console.error('Language manager not initialized');            return null;        }        const fortunes = window.languageManager.translations[currentLang]?.luck?.fortunes;        if (!fortunes || !Array.isArray(fortunes)) {            console.error('Fortunes not found for language:', currentLang);            return null;        }        const currentFortune = fortuneText.textContent;        const availableFortunes = fortunes.filter(fortune => fortune !== currentFortune);        if (availableFortunes.length === 0) {            return fortunes[Math.floor(Math.random() * fortunes.length)];        }        return availableFortunes[Math.floor(Math.random() * availableFortunes.length)];    }    function updateFortune() {        const newFortune = getRandomFortune();        if (newFortune) {            localStorage.setItem('lastFortuneTime', Date.now().toString());            fortuneText.style.opacity = '0';            fortuneText.style.transform = 'translateY(10px)';            setTimeout(() => {                fortuneText.textContent = newFortune;                requestAnimationFrame(() => {                    fortuneText.style.opacity = '1';                    fortuneText.style.transform = 'translateY(0)';                });                const currentLang = localStorage.getItem('language') || 'ru';                const successMessage = window.languageManager.translations[currentLang].luck.successMessage;                Notifications.show(successMessage, 'success');            }, 300);        }    }    fortuneButton.addEventListener('click', (e) => {        e.preventDefault();        console.log('Fortune button clicked');        fortuneButton.classList.add('clicked');        setTimeout(() => fortuneButton.classList.remove('clicked'), 200);        updateFortune();    });    if (languageBtn && languageDropdown) {        languageBtn.addEventListener('click', (e) => {            e.preventDefault();            e.stopPropagation();            languageDropdown.classList.toggle('active');            languageBtn.classList.toggle('active');        });        document.addEventListener('click', (e) => {            if (!languageBtn.contains(e.target) && !languageDropdown.contains(e.target)) {                languageDropdown.classList.remove('active');                languageBtn.classList.remove('active');            }        });    }    const style = document.createElement('style');    style.textContent = `        .fortune-text {            transition: opacity 0.3s ease, transform 0.3s ease;        }    `;    document.head.appendChild(style);    const defaultText = window.languageManager?.translations[localStorage.getItem('language') || 'ru']?.luck?.defaultText;    if (defaultText) {        fortuneText.textContent = defaultText;    }});